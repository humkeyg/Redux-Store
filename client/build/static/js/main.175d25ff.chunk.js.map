{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","initialState","products","cart","cartOpen","categories","currentCategory","store","createStore","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","value","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.175d25ff.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\nconst initialState = \n    {\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  }\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport default function reducer(state = initialState, action){\n    switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux'\r\nimport reducer from './reducers.js'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  \n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const dispatch = useDispatch()\n  const state = useSelector((state) => state);\n  \n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  \n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();  \n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport {Provider} from 'react-redux';\nimport store from './utils/store';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}